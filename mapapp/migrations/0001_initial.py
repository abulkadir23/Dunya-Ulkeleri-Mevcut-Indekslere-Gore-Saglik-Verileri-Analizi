# Generated by Django 5.1.4 on 2025-01-02 01:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Country', models.CharField(max_length=100)),
                ('City', models.CharField(max_length=100)),
                ('Rank_x', models.FloatField(blank=True, null=True)),
                ('sunshine_hours', models.FloatField(blank=True, db_column='Sunshine hours(City)', null=True)),
                ('life_expectancy', models.FloatField(blank=True, db_column='Life expectancy(years) (Country)', null=True)),
                ('pollution_index', models.FloatField(blank=True, db_column='Pollution(Index score) (City)', null=True)),
                ('happiness_levels', models.FloatField(blank=True, db_column='Happiness levels(Country)', null=True)),
                ('outdoor_activities', models.IntegerField(blank=True, db_column='Outdoor activities(City)', null=True)),
                ('takeout_places', models.IntegerField(blank=True, db_column='Number of take out places(City)', null=True)),
                ('cost_living_index', models.FloatField(blank=True, db_column='Cost of Living Index', null=True)),
                ('rent_index', models.FloatField(blank=True, db_column='Rent Index', null=True)),
                ('cost_living_rent_index', models.FloatField(blank=True, db_column='Cost of Living Plus Rent Index', null=True)),
                ('groceries_index', models.FloatField(blank=True, db_column='Groceries Index', null=True)),
                ('restaurant_price_index', models.FloatField(blank=True, db_column='Restaurant Price Index', null=True)),
                ('local_purchasing_power', models.FloatField(blank=True, db_column='Local Purchasing Power Index', null=True)),
                ('Rank_y', models.FloatField(blank=True, null=True)),
                ('obesity_levels', models.FloatField(blank=True, db_column='Obesity levels(Country)', null=True)),
                ('annual_hours_worked', models.FloatField(blank=True, db_column='Annual avg. hours worked', null=True)),
                ('gym_membership_cost', models.FloatField(blank=True, db_column='Cost of a monthly gym membership(City)', null=True)),
                ('water_bottle_cost', models.FloatField(blank=True, db_column='Cost of a bottle of water(City)', null=True)),
            ],
            options={
                'db_table': 'son_veriler',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('population', models.BigIntegerField()),
                ('area', models.FloatField()),
                ('capital', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=50)),
                ('language', models.CharField(max_length=100)),
                ('gdp', models.FloatField()),
                ('timezone', models.CharField(max_length=50)),
                ('internet_domain', models.CharField(max_length=10)),
                ('calling_code', models.CharField(max_length=10)),
                ('climate', models.CharField(max_length=100)),
                ('flag_url', models.URLField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('country_name', models.CharField(max_length=100)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'favorite_countries',
                'unique_together': {('user_id', 'country_name')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=100)),
                ('data_type', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'country_name', 'data_type')},
            },
        ),
    ]
